//Max heap sort
#include<iostream>
using namespace std;

void heapify(int arr[],int n,int i)
{
    int largest=i;
    
    int l=2*i + 1;
    int r=2*i + 2;
    
    if(l< n && arr[l] > arr[largest])
    {
        largest=l;
    }
    if(r<n && arr[r] > arr[largest])
    {
        largest=r;
    }
    
    if(largest !=i)
    {
        swap(arr[i],arr[largest]);
        heapify(arr,n,largest);
        
    }
}
void  heap_sort(int arr[],int n)
{
    for(int i=(n/2)-1;i>=0;i--)
    {
        heapify(arr,n,i);
    }
    for(int j=n-1;j>=0;j--)
    {
        swap(arr[0],arr[j]);
        heapify(arr,j,0);
        
    }
}

int main()
{
    int arr[]={2,9,5,3,8,1};
    int size=sizeof(arr)/sizeof(arr[0]);
    
    heap_sort(arr,size);
    cout<<"\n";
    for(int i=0;i<size;i++)
    {
        cout<<arr[i];
        cout<<" ";
    }
    return 0;
}


//Output
1 2 3 5 8 9
